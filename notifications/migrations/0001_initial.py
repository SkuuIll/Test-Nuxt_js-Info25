# Generated by Django 5.2.4 on 2025-08-01 21:24

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='NotificationBatch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Title for the notification batch', max_length=255)),
                ('description', models.TextField(blank=True, help_text='Description of the notification batch')),
                ('batch_type', models.CharField(help_text='Type of notification batch', max_length=50)),
                ('is_sent', models.BooleanField(default=False, help_text='Whether this batch has been sent')),
                ('sent_at', models.DateTimeField(blank=True, help_text='When this batch was sent', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Notification Batch',
                'verbose_name_plural': 'Notification Batches',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='NotificationPreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email_notifications', models.BooleanField(default=True, help_text='Receive notifications via email')),
                ('push_notifications', models.BooleanField(default=True, help_text='Receive browser push notifications')),
                ('in_app_notifications', models.BooleanField(default=True, help_text='Receive in-app notifications')),
                ('notify_comments', models.BooleanField(default=True, help_text='Notify when someone comments on your posts')),
                ('notify_comment_replies', models.BooleanField(default=True, help_text='Notify when someone replies to your comments')),
                ('notify_post_likes', models.BooleanField(default=True, help_text='Notify when someone likes your posts')),
                ('notify_user_follows', models.BooleanField(default=True, help_text='Notify when someone follows you')),
                ('notify_post_featured', models.BooleanField(default=True, help_text='Notify when your posts are featured')),
                ('notify_content_moderation', models.BooleanField(default=True, help_text='Notify about content moderation actions')),
                ('notify_system_announcements', models.BooleanField(default=True, help_text='Receive system announcements')),
                ('notify_user_registrations', models.BooleanField(default=False, help_text='Notify when new users register (admin only)')),
                ('notify_moderation_required', models.BooleanField(default=False, help_text='Notify when content requires moderation (admin only)')),
                ('notify_post_published', models.BooleanField(default=False, help_text='Notify when posts are published (admin only)')),
                ('quiet_hours_enabled', models.BooleanField(default=False, help_text='Enable quiet hours (no notifications during specified time)')),
                ('quiet_hours_start', models.TimeField(blank=True, help_text='Start time for quiet hours', null=True)),
                ('quiet_hours_end', models.TimeField(blank=True, help_text='End time for quiet hours', null=True)),
                ('digest_frequency', models.CharField(choices=[('never', 'Never'), ('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly')], default='weekly', help_text='How often to receive notification digest emails', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(help_text='User these preferences belong to', on_delete=django.db.models.deletion.CASCADE, related_name='notification_preferences', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Notification Preference',
                'verbose_name_plural': 'Notification Preferences',
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_type', models.CharField(choices=[('comment', 'New Comment'), ('user_registration', 'User Registration'), ('post_published', 'Post Published'), ('post_featured', 'Post Featured'), ('system_announcement', 'System Announcement'), ('moderation_required', 'Moderation Required'), ('post_liked', 'Post Liked'), ('comment_reply', 'Comment Reply'), ('user_followed', 'User Followed'), ('content_approved', 'Content Approved'), ('content_rejected', 'Content Rejected')], help_text='Type of notification', max_length=50)),
                ('title', models.CharField(help_text='Notification title', max_length=255)),
                ('message', models.TextField(help_text='Notification message content')),
                ('priority', models.CharField(choices=[('low', 'Low'), ('normal', 'Normal'), ('high', 'High'), ('urgent', 'Urgent')], default='normal', help_text='Priority level of the notification', max_length=10)),
                ('data', models.JSONField(blank=True, default=dict, help_text='Additional context data for the notification')),
                ('action_url', models.URLField(blank=True, help_text='URL to navigate to when notification is clicked')),
                ('is_read', models.BooleanField(default=False, help_text='Whether the notification has been read')),
                ('is_dismissed', models.BooleanField(default=False, help_text='Whether the notification has been dismissed')),
                ('delivered_at', models.DateTimeField(blank=True, help_text='When the notification was delivered via WebSocket', null=True)),
                ('read_at', models.DateTimeField(blank=True, help_text='When the notification was marked as read', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='When the notification was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='When the notification was last updated')),
                ('expires_at', models.DateTimeField(blank=True, help_text='When the notification expires (optional)', null=True)),
                ('recipient', models.ForeignKey(help_text='User who will receive this notification', on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
                ('sender', models.ForeignKey(blank=True, help_text='User who triggered this notification (optional)', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sent_notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Notification',
                'verbose_name_plural': 'Notifications',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['recipient', 'is_read'], name='notificatio_recipie_4e3567_idx'), models.Index(fields=['recipient', 'created_at'], name='notificatio_recipie_f39341_idx'), models.Index(fields=['notification_type', 'created_at'], name='notificatio_notific_f2e0f7_idx'), models.Index(fields=['priority', 'created_at'], name='notificatio_priorit_f7c359_idx'), models.Index(fields=['is_read', 'created_at'], name='notificatio_is_read_3a06ff_idx'), models.Index(fields=['expires_at'], name='notificatio_expires_4f3289_idx')],
            },
        ),
    ]
